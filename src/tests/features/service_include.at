FWD_START_TEST([service include])
AT_KEYWORDS(service xml gh273 rhbz1720300)

AT_CHECK([mkdir -p ./services])
AT_CHECK([cat <<HERE > ./services/my-service-with-include.xml
<?xml version="1.0" encoding="utf-8"?>
<service>
  <short>my-service-with-include</short>
  <description>This service includes other services</description>
  <port protocol="tcp" port="12345"/>
  <include service="ssdp"/>
  <include service="mdns"/>
  <include service="recursive-service"/>
</service>
HERE
])
AT_CHECK([cat <<HERE > ./services/recursive-service.xml
<?xml version="1.0" encoding="utf-8"?>
<service>
  <short>recursive-service</short>
  <description>Include a service that included us</description>
  <include service="my-service-with-include"/>
</service>
HERE
])
FWD_RELOAD

FWD_CHECK([-q --zone=drop --add-interface=foobar0])
FWD_CHECK([-q --zone=drop --add-service=my-service-with-include])
FWD_CHECK([--zone=drop --list-services], 0, [dnl
my-service-with-include
])

dnl check recursive includes
FWD_CHECK([-q --zone=drop --add-service=recursive-service])
FWD_CHECK([-q --zone=drop --remove-service=recursive-service])

NFT_LIST_RULES([inet], [filter_IN_drop_allow], 0, [dnl
    table inet firewalld {
    chain filter_IN_drop_allow {
    ip daddr 239.255.255.250 udp dport 1900 accept
    ip6 daddr ff02::c udp dport 1900 accept
    ip daddr 224.0.0.251 udp dport 5353 accept
    ip6 daddr ff02::fb udp dport 5353 accept
    tcp dport 12345 accept
    }
    }
])
IPTABLES_LIST_RULES([filter], [IN_drop_allow], 0, [dnl
    ACCEPT udp -- 0.0.0.0/0 239.255.255.250 udp dpt:1900 
    ACCEPT udp -- 0.0.0.0/0 224.0.0.251 udp dpt:5353 
    ACCEPT tcp -- 0.0.0.0/0 0.0.0.0/0 tcp dpt:12345 
])
IP6TABLES_LIST_RULES([filter], [IN_drop_allow], 0, [dnl
    ACCEPT udp ::/0 ff02::c udp dpt:1900 
    ACCEPT udp ::/0 ff02::fb udp dpt:5353 
    ACCEPT tcp ::/0 ::/0 tcp dpt:12345 
])

dnl firewall-cmd
FWD_CHECK([--permanent --service=my-service-with-include --query-include=recursive-service], 0, [ignore], [ignore])
FWD_CHECK([-q --permanent --service=my-service-with-include --add-include=ssh])
FWD_CHECK([--permanent --service=my-service-with-include --query-include=ssh], 0, [ignore], [ignore])
AT_CHECK([grep '<include service="ssh"/>' ./services/my-service-with-include.xml ], 0, [ignore], [ignore])
FWD_CHECK([-q --permanent --service=my-service-with-include --remove-include=ssh])
FWD_CHECK([--permanent --service=my-service-with-include --query-include=ssh], 1, [ignore], [ignore])
AT_CHECK([grep '<include service="ssh"/>' ./services/my-service-with-include.xml ], 1, [ignore], [ignore])
FWD_CHECK([--permanent --service=my-service-with-include --get-includes], 0, [dnl
mdns recursive-service ssdp
])
FWD_CHECK([--permanent --info-service=my-service-with-include | TRIM_WHITESPACE], 0, [m4_strip([dnl
my-service-with-include
  ports: 12345/tcp
  protocols:
  source-ports:
  modules:
  destination:
  includes: mdns recursive-service ssdp
  helpers:
])])
FWD_CHECK([--info-service=my-service-with-include | TRIM_WHITESPACE], 0, [m4_strip([dnl
my-service-with-include
  ports: 12345/tcp
  protocols:
  source-ports:
  modules:
  destination:
  includes: mdns recursive-service ssdp
  helpers:
])])

dnl firewall-offline-cmd
FWD_OFFLINE_CHECK([--service=my-service-with-include --query-include=recursive-service], 0, [ignore], [ignore])
FWD_OFFLINE_CHECK([-q --service=my-service-with-include --add-include=ssh])
FWD_OFFLINE_CHECK([--service=my-service-with-include --query-include=ssh], 0, [ignore], [ignore])
AT_CHECK([grep '<include service="ssh"/>' ./services/my-service-with-include.xml ], 0, [ignore], [ignore])
FWD_OFFLINE_CHECK([-q --service=my-service-with-include --remove-include=ssh])
FWD_OFFLINE_CHECK([--service=my-service-with-include --query-include=ssh], 1, [ignore], [ignore])
AT_CHECK([grep '<include service="ssh"/>' ./services/my-service-with-include.xml ], 1, [ignore], [ignore])
FWD_OFFLINE_CHECK([--service=my-service-with-include --get-includes], 0, [dnl
mdns recursive-service ssdp
])
FWD_OFFLINE_CHECK([--info-service=my-service-with-include | TRIM_WHITESPACE], 0, [m4_strip([dnl
my-service-with-include
  ports: 12345/tcp
  protocols:
  source-ports:
  modules:
  destination:
  includes: mdns recursive-service ssdp
  helpers:
])])

dnl negative test for including service that doesn't exist
FWD_CHECK([--permanent --service=my-service-with-include --add-include=does-not-exist], 101, [ignore], [ignore])
FWD_OFFLINE_CHECK([--service=my-service-with-include --add-include=does-not-exist], 101, [ignore], [ignore])

FWD_END_TEST([-e '/ERROR: INVALID_SERVICE:/d'])

FWD_START_TEST([rich service includes])
AT_KEYWORDS(policy service rich gh707 gh1075)

FWD_CHECK([--permanent --new-policy=foobar], 0, [ignore])
FWD_CHECK([--permanent --policy=foobar --add-ingress-zone ANY], 0, [ignore])
FWD_CHECK([--permanent --policy=foobar --add-egress-zone HOST], 0, [ignore])

FWD_CHECK([--permanent --policy=foobar --add-rich-rule='rule family=ipv4 source address="10.10.10.0/24" service name=foreman accept'], 0, [ignore])
FWD_CHECK([--permanent --policy=foobar --query-rich-rule='rule family=ipv4 source address="10.10.10.0/24" service name=foreman accept'], 0, [ignore])

FWD_RELOAD

NFT_LIST_RULES([inet], [filter_IN_policy_foobar_allow], 0, [dnl
    table inet firewalld {
        chain filter_IN_policy_foobar_allow {
            ip saddr 10.10.10.0/24 tcp dport 53 accept
            ip saddr 10.10.10.0/24 udp dport 53 accept
            ip saddr 10.10.10.0/24 tcp dport 80 accept
            ip saddr 10.10.10.0/24 tcp dport 443 accept
            ip saddr 10.10.10.0/24 udp dport 67 accept
            udp dport 69 ct helper set "helper-tftp-udp"
            ip saddr 10.10.10.0/24 udp dport 69 accept
            ip saddr 10.10.10.0/24 udp dport 68 accept
            ip saddr 10.10.10.0/24 tcp dport 8140 accept
        }
    }
])
IPTABLES_LIST_RULES([filter], [IN_foobar_allow], 0, [dnl
    ACCEPT tcp -- 10.10.10.0/24 0.0.0.0/0 tcp dpt:53
    ACCEPT udp -- 10.10.10.0/24 0.0.0.0/0 udp dpt:53
    ACCEPT tcp -- 10.10.10.0/24 0.0.0.0/0 tcp dpt:80
    ACCEPT tcp -- 10.10.10.0/24 0.0.0.0/0 tcp dpt:443
    ACCEPT udp -- 10.10.10.0/24 0.0.0.0/0 udp dpt:67
    ACCEPT udp -- 10.10.10.0/24 0.0.0.0/0 udp dpt:69
    ACCEPT udp -- 10.10.10.0/24 0.0.0.0/0 udp dpt:68
    ACCEPT tcp -- 10.10.10.0/24 0.0.0.0/0 tcp dpt:8140
])

dnl iptables needs the helper rules in the raw table
IPTABLES_LIST_RULES([raw], [PRE_foobar_allow], 0, [dnl
    CT udp -- 0.0.0.0/0 0.0.0.0/0 udp dpt:69 CT helper tftp
])

FWD_CHECK([--permanent --policy=foobar --remove-rich-rule='rule family=ipv4 source address="10.10.10.0/24" service name=foreman accept'], 0, [ignore])
FWD_CHECK([--permanent --policy=foobar --query-rich-rule='rule family=ipv4 source address="10.10.10.0/24" service name=foreman accept'], 1, [ignore])
FWD_CHECK([--policy=foobar --remove-rich-rule='rule family=ipv4 source address="10.10.10.0/24" service name=foreman accept'], 0, [ignore])
FWD_CHECK([--policy=foobar --query-rich-rule='rule family=ipv4 source address="10.10.10.0/24" service name=foreman accept'], 1, [ignore])

FWD_END_TEST()